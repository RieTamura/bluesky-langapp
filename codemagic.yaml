workflows:
  ios-testflight:
    name: iOS TestFlight (Expo prebuild + Xcode)
    max_build_duration: 120
    instance_type: mac_mini_m2

    integrations:
      app_store_connect: "Codemagic"

    environment:
      vars:
        BUNDLE_ID: com.rietamura.bluelang
        APP_PATH: mobile

    scripts:
      - name: Print versions and install JS deps (mobile/)
        script: |
          node -v
          npm -v
          pushd "$APP_PATH"
          npm ci
          npm run lint --if-present
          npm run test --if-present
          popd

      - name: Expo prebuild (iOS on macOS runner, in mobile/)
        script: |
          set -e
          pushd "$APP_PATH"
          npx expo prebuild --platform ios --non-interactive --clean
          popd
          # 必要に応じて $APP_PATH/ios 配下の Info.plist 等をここで書き換える

      - name: Install CocoaPods (mobile/ios)
        script: |
          set -e
          pushd "$APP_PATH/ios"
          pod repo update
          pod install
          popd

      - name: Set up signing (Automatic via App Store Connect)
        script: |
          set -e
          keychain add-certificates
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          pushd "$APP_PATH/ios"
          xcode-project use-profiles
          popd

      - name: Detect workspace and scheme (under mobile/ios)
        script: |
          set -euo pipefail
          WORKSPACE=$(ls -1d "$APP_PATH"/ios/*.xcworkspace | head -n 1)
          if [ -z "${WORKSPACE:-}" ]; then
            echo "No .xcworkspace found under $APP_PATH/ios/"
            exit 1
          fi
          echo "XCODE_WORKSPACE=$WORKSPACE" >> $CM_ENV
          xcodebuild -list -json -workspace "$WORKSPACE" > xclist.json
          SCHEME=$(python3 -c 'import json,sys; d=json.load(open("xclist.json")); s=(d.get("workspace",{}).get("schemes") or d.get("project",{}).get("schemes") or []); print(s[0] if s else "")')
          if [ -z "$SCHEME" ]; then
            echo "No Xcode scheme detected"
            exit 1
          fi
          echo "Detected scheme: $SCHEME"
          echo "XCODE_SCHEME=$SCHEME" >> $CM_ENV

      - name: Verify signing settings
        script: |
          set -e
          xcodebuild -showBuildSettings \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" | egrep 'CODE_SIGN|PROVISION|DEVELOPMENT_TEAM|PRODUCT_BUNDLE_IDENTIFIER' || true

          echo "Installed provisioning profiles:"
          ls "$HOME/Library/MobileDevice/Provisioning Profiles" | wc -l || true

      # （必要なら有効化）ビルド番号の自動更新
      # - name: Bump build number
      #   script: |
      #     # 例: タイムスタンプを CFBundleVersion に設定（プロジェクト構成に合わせて調整）
      #     /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $(date +%Y%m%d%H%M)" "$APP_PATH"/ios/*/Info.plist || true

      - name: Build .ipa
        script: |
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"

      - name: Publish to TestFlight
        script: |
          app-store-connect publish \
            --path "$(find $CM_BUILD_DIR -name '*.ipa' | head -n 1)" \
            --submit-to-testflight

    artifacts:
      - $CM_BUILD_DIR/**/**/*.ipa
      - $CM_BUILD_DIR/**/xcodebuild.log
      - mobile/ios/build/**/*.dSYM
      - $HOME/Library/Developer/Xcode/DerivedData/**/Logs/**/*.log

    publishing:
      email:
        recipients:
          - your-email@example.com
        notify:
          success: true
          failure: true
